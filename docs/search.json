[{"path":"/README.knit.html","id":null,"dir":"","previous_headings":"","what":"SSMimpute","title":"SSMimpute","text":"goal SSMimpute address missing data possibly non-stationary multivariate time series. multiple imputation strategy based state space model. package implements methods SSMimpute introduced Xiaoxuan Cai et al., 2022.","code":""},{"path":"/README.knit.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"SSMimpute","text":"can install development version SSMimpute like :","code":"devtools::install_github(\"js5959/SSMimpute\") library(SSMimpute)"},{"path":"/README.knit.html","id":"work-flow","dir":"","previous_headings":"","what":"Work Flow","title":"SSMimpute","text":"Data exploration: Using shrinkTVP() explore_SSM function get sense data, identify formula, check possible ARIMA model latent space find change points. problem fitting partially alleviated introducing shrinkage. Based exploration result, set ss_param cpt_learning_param SSMimpute_unanimous_cpts() function. See Introduction Exploration detail process exploration set parameters based exploration, run SSMimpute_unanimous_cpts(). estimated coefficient state-space model, imputed missing data. See Quick Start detailed illustration function usage analysis results.","code":""},{"path":"/articles/Quick-start.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quick Start","text":"start simple case, use data_stationary included package, generated following data generation process: \\[ Y_t = 40+0.5Y_{t-1}-1.5X_t-0.5X_{t-1}-C_t+v_t, v_t \\sim \\text{..d }\\mathcal{N}(0,1) \\]","code":""},{"path":"/articles/Quick-start.html","id":"generate-missing-index","dir":"Articles","previous_headings":"","what":"Generate Missing Index","title":"Quick Start","text":"using function generate.missing_index() provided package, create MNAR missing index, create columns corresponding lagged outcomes.  # Start Imputation Based prior knowledge(usually need additional step data exploration, see: exploration state-space model detailed introduction), set formula learning parameter ss_param cpt_learning_param","code":"data = data_stationary#using data_stationary index_MNAR = generate.missing_index(type = \"MNAR\",                                      n=length(data$y),                                     param = list(data = data.frame(y=data$y,x=data$x),                                                  MNAR.type = \"increasing\",                                                  coeff = c(0.1,-0.3,0),                                                  MNAR.drawplot = c(TRUE, \"y\"))                                     )$missing_index #> The missing indicators for MNAR 'increasing' are generated! #> The missing rate for MNAR is 0.438  data$y[index_MNAR] = NA data$y_1 = c(NA,data$y[1:999]) data$x_1 = c(NA,data$x[1:999]) data$c_1 = c(NA,data$c[1:999]) data = data[c(2:1000),] data_space_SSMimpute = data kable(head(data_space_SSMimpute)) imputeTS::ggplot_na_distribution(data_space_SSMimpute$y, color_missing = \"pink\",color_missing_border = \"pink\", alpha_missing = 0.1) formula=\"y~y_1+x+x_1+c\" formula_var=unlist(strsplit(unlist(strsplit(formula,\"~\"))[2],\"+\",fixed=T))  ss_param=list(inits=c(log(0.25),log(1)),m0=c(40,0.1,-0.1,-0.1,-1),C0=diag(rep(10^3),5), AR1_coeffi=NULL,rw_coeffi=\"intercept\", v_cp_param=NULL, w_cp_param=NULL,max_iteration=100)  result_SSMimpute1=SSMimpute_unanimous_cpts(data_ss_ori=data_space_SSMimpute,formula_var,ss_param_temp=ss_param,                                                          initial_imputation_option=\"StructTS\",                                                          estimate_convergence_cri=0.01,                                                          lik_convergence_cri=0.01,                                                          stepsize_for_newpart=1/3,                                                          max_iteration=100,                                                          cpt_learning_param=list(cpt_method=\"mean\",burnin=1/10,mergeband=20,convergence_cri=10),                                                          cpt_initial_guess_option=\"ignore\",                                                          dlm_option=\"smooth\",m=5,seed=1,printFlag=F)"},{"path":"/articles/Quick-start.html","id":"analysis-of-result","dir":"Articles","previous_headings":"","what":"Analysis of Result","title":"Quick Start","text":"Now take close look result generated SSMimpute_unanimous_cpts() Estimated coefficient: can see SSMimpute_unanimous_cpts() successfully uncover data generating process. also plot imputed missing value versus ground truth:","code":"#kable(result_statespace_SSMimpute1$result_convergence) #kable(result_statespace_SSMimpute1$result_convergence_mp) kable(result_SSMimpute1$result_convergence_mp_addV) #result_statespace_SSMimpute1$estimated_cpts data_na = result_SSMimpute1$data_temp length(data_na$y_1) #> [1] 999  data_temp = result_SSMimpute1$data_temp missing_part=which(is.na(data_temp$y))[which(is.na(data_temp$y))<nrow(data_temp)] data_temp$y_1[missing_part+1]=result_SSMimpute1$y_final #imputeTS::ggplot_na_distribution(data_stationary$y[1:999], color_missing = \"pink\",color_missing_border = \"pink\", alpha_missing = 0.9) imputeTS::ggplot_na_imputations(x_with_na = data_space_SSMimpute$y_1, x_with_imputations = data_na$y_1,x_with_truth = data_stationary$y[1:999])"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Junzhe Shao. Author, maintainer. Xiaoxuan Cai. Author. Linda Valeri. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shao J, Cai X, Valeri L (2022). SSMimpute: State-space Model Multiple Imputation Missing Data non-stationary Multivariate Time Series. R package version 0.1.0, https://github.com/Junzheshao5959/SSMimpute.","code":"@Manual{,   title = {SSMimpute: State-space Model Multiple Imputation for Missing Data in non-stationary Multivariate Time Series},   author = {Junzhe Shao and Xiaoxuan Cai and Linda Valeri},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/Junzheshao5959/SSMimpute}, }"},{"path":"/index.html","id":"ssmimpute","dir":"","previous_headings":"","what":"State-space Model Multiple Imputation for Missing Data in non-stationary Multivariate Time Series","title":"State-space Model Multiple Imputation for Missing Data in non-stationary Multivariate Time Series","text":"goal SSMimpute address missing data possibly non-stationary multivariate time series. multiple imputation strategy based state space model. package implements methods SSMimpute introduced Xiaoxuan Cai et al., 2022.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"State-space Model Multiple Imputation for Missing Data in non-stationary Multivariate Time Series","text":"can install development version SSMimpute like :","code":"devtools::install_github(\"js5959/SSMimpute\") library(SSMimpute)"},{"path":"/index.html","id":"work-flow","dir":"","previous_headings":"","what":"Work Flow","title":"State-space Model Multiple Imputation for Missing Data in non-stationary Multivariate Time Series","text":"Data exploration: Using shrinkTVP() explore_SSM function get sense data, identify formula, check possible ARIMA model latent space find change points. problem fitting partially alleviated introducing shrinkage. Based exploration result, set ss_param cpt_learning_param SSMimpute_unanimous_cpts() function. See Introduction Exploration detail process exploration set parameters based exploration, run SSMimpute_unanimous_cpts(). estimated coefficient state-space model, imputed missing data. See Quick Start detailed illustration function usage analysis results.","code":""},{"path":"/reference/SSMimpute_unanimous_cpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function, state space model multiple imputation with unanimous changepoints — SSMimpute_unanimous_cpts","title":"Main function, state space model multiple imputation with unanimous changepoints — SSMimpute_unanimous_cpts","text":"Main function, state space model multiple imputation unanimous changepoints","code":""},{"path":"/reference/SSMimpute_unanimous_cpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function, state space model multiple imputation with unanimous changepoints — SSMimpute_unanimous_cpts","text":"","code":"SSMimpute_unanimous_cpts(   data_ss_ori,   formula_var,   ss_param_temp,   initial_imputation_option = \"StructTS\",   estimate_convergence_cri = 0.01,   lik_convergence_cri = 0.01,   stepsize_for_newpart = 1/3,   max_iteration = 100,   cpt_learning_param = list(cpt_method = \"mean\", burnin = 1/10, mergeband = 20,     convergence_cri = 15),   cpt_initial_guess_option = \"ignore\",   dlm_option = \"smooth\",   m = 5,   seed = 1,   printFlag = T )"},{"path":"/reference/SSMimpute_unanimous_cpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function, state space model multiple imputation with unanimous changepoints — SSMimpute_unanimous_cpts","text":"data_ss_ori contains information, selected variables formula_var enters state space model formula_var select variables data_ss statespace model ss_param_temp list parameters set state-space model m0: initial values states C0: initial values variance states inits: initial values estimating NA terms, via maximizing likelihood AR1_coeffi: variables, whose coefficient AR(1) process; none, NULL rw_coeffi: variables, whose coefficient random walk process;none, NULL w_cp_param: variables, whose coefficients periodic fixed (may shift levels time, fixed within periods), contains list parameters variable whose coefficient level shifts different values. Details variable: variable : name variable (Required); segments : many segments constant coefficient (Required); changepoints :corresponding changepoints separated segments, can either specified user automatically inferred, fixed_cpts exist changepoints exists v_cp_param: information periodic observational variance V (may decrease increase time, fixed within periods), contains list parameters variable whose coefficient level shifts different values. Details variable: segments : many segments constant coefficient (Required); changepoints : corresponding changepoints separated segments, can either specified user automatically inferred, fixed_cpts exist changepoints exists initial_imputation_option first iteration imputing missing y, choose StructTS others, \"ignore\" estimate_convergence_cri critic value convergence check, default 0.01 lik_convergence_cri critic value convergence check, default 0.01 stepsize_for_newpart stepsize specified, default 1/3 max_iteration max iteration, default 100 cpt_learning_param list variable change point learning cpt_method: either \"mean\" \"meanvar\" burnin: positive number (0,1) mergeband: positive integer AR1_coeffi: variables, whose coefficient AR(1) process; none, NULL rw_coeffi: variables, whose coefficient random walk process;none, NULL w_cp_param: variables, whose coefficients periodic fixed (may shift levels time, fixed within periods) v_cp_param: information periodic observational variance V (may decrease increase time, fixed within periods) cpt_initial_guess_option option initially learning cpts preparation period dlm_option choose smooth filter m number draws multiple imputation seed random seed printFlag whether need print Flag plots.","code":""},{"path":"/reference/SSMimpute_unanimous_cpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function, state space model multiple imputation with unanimous changepoints — SSMimpute_unanimous_cpts","text":"list result","code":""},{"path":"/reference/data_AR1.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data for a complex structure, with  AR(1) \\(\\beta_{C,t}\\) — data_AR1","title":"Sample data for a complex structure, with  AR(1) \\(\\beta_{C,t}\\) — data_AR1","text":"Sample data complex structure,  AR(1) \\(\\beta_{C,t}\\)","code":""},{"path":"/reference/data_AR1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data for a complex structure, with  AR(1) \\(\\beta_{C,t}\\) — data_AR1","text":"","code":"data_AR1"},{"path":"/reference/data_AR1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data for a complex structure, with  AR(1) \\(\\beta_{C,t}\\) — data_AR1","text":"data frame 1000 rows 4 variables, data generation process follows following equation $$Y_t = 40+0.5Y_{t-1}-\\beta_{X,t}X_t-0.5X_{t-1}-\\beta_{C}C_t+v_t, v_t \\sim \\text{..d }\\mathcal{N}(0,1)\\\\ \\text{} \\beta_{C,t} =0.5 \\beta_{C,t-1}-1+w_{\\beta,t}, w_{\\beta,t}\\sim \\mathcal{N}(0,0.1)$$ Date simulated date y outcome, data generating process c continous covarite x continous treatment","code":""},{"path":"/reference/data_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data for a complex structure, with periodic stable \\(\\beta_{X,t}\\) and random walk \\(\\beta_{C,t}\\) — data_complex","title":"Sample data for a complex structure, with periodic stable \\(\\beta_{X,t}\\) and random walk \\(\\beta_{C,t}\\) — data_complex","text":"Sample data complex structure, periodic stable \\(\\beta_{X,t}\\) random walk \\(\\beta_{C,t}\\)","code":""},{"path":"/reference/data_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data for a complex structure, with periodic stable \\(\\beta_{X,t}\\) and random walk \\(\\beta_{C,t}\\) — data_complex","text":"","code":"data_complex"},{"path":"/reference/data_complex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data for a complex structure, with periodic stable \\(\\beta_{X,t}\\) and random walk \\(\\beta_{C,t}\\) — data_complex","text":"data frame 1000 rows 4 variables, data generation process follows following equation $$Y_t = 40+0.5Y_{t-1}-\\beta_{X,t}X_t-0.5X_{t-1}-\\beta_{C}C_t+v_t, v_t \\sim \\text{..d }\\mathcal{N}(0,1)\\\\ \\text{} \\beta_{X,t}= -(t\\[0,400])-2.5I(t\\(400,700]-(t\\(700,1000])), \\\\\\beta_{C,t} =\\beta_{C,t-1}+1.5+w_{\\beta,t}, w_{\\beta,t}\\sim \\mathcal{N}(0,0.05)$$ Date simulated date y outcome, data generating process y_1 one step laggged come c continous covarite x continous treatment x_1 one step lagged continous treatment","code":""},{"path":"/reference/data_randomwalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data for a complex structure, with  random walk \\(\\beta_{C,t}\\) — data_randomwalk","title":"Sample data for a complex structure, with  random walk \\(\\beta_{C,t}\\) — data_randomwalk","text":"Sample data complex structure,  random walk \\(\\beta_{C,t}\\)","code":""},{"path":"/reference/data_randomwalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data for a complex structure, with  random walk \\(\\beta_{C,t}\\) — data_randomwalk","text":"","code":"data_randomwalk"},{"path":"/reference/data_randomwalk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data for a complex structure, with  random walk \\(\\beta_{C,t}\\) — data_randomwalk","text":"data frame 1000 rows 4 variables, data generation process follows following equation $$Y_t = 40+0.5Y_{t-1}-\\beta_{X,t}X_t-0.5X_{t-1}-\\beta_{C}C_t+v_t, v_t \\sim \\text{..d }\\mathcal{N}(0,1)\\\\ \\text{} \\beta_{C,t} =\\beta_{C,t-1}+1.5+w_{\\beta,t}, w_{\\beta,t}\\sim \\mathcal{N}(0,0.05)$$ Date simulated date y outcome, data generating process c continous covarite x continous treatment","code":""},{"path":"/reference/data_stationary.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample data for illustration of stationary coefficient — data_stationary","title":"Sample data for illustration of stationary coefficient — data_stationary","text":"Sample data illustration stationary coefficient","code":""},{"path":"/reference/data_stationary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample data for illustration of stationary coefficient — data_stationary","text":"","code":"data_stationary"},{"path":"/reference/data_stationary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample data for illustration of stationary coefficient — data_stationary","text":"data frame 1000 rows 4 variables, relation ship follows following equation $$Y_t = 40+0.5Y_{t-1}-1.5X_t-0.5X_{t-1}-C_t+v_t, v_t \\sim \\text{..d }\\mathcal{N}(0,1)$$ Date simulated date y outcome, data generating process c continous covarite x continous treatment","code":""},{"path":"/reference/explore_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploration function as initial guess — explore_SSM","title":"Exploration function as initial guess — explore_SSM","text":"Exploration function initial guess","code":""},{"path":"/reference/explore_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploration function as initial guess — explore_SSM","text":"","code":"explore_SSM(res = res, plotFlag = T)"},{"path":"/reference/explore_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploration function as initial guess — explore_SSM","text":"res result subject, generated shrinkTVP function plotFlag whether need plot result, default value T","code":""},{"path":"/reference/explore_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exploration function as initial guess — explore_SSM","text":"Tables including non-stationary coefficient, possible change points, fitted ARIMA model","code":""},{"path":"/reference/generate.missing_index.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for generating — generate.missing_index","title":"A function for generating — generate.missing_index","text":"function generating","code":""},{"path":"/reference/generate.missing_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for generating — generate.missing_index","text":"","code":"generate.missing_index(type, param, n, printFlag = T)"},{"path":"/reference/generate.missing_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for generating — generate.missing_index","text":"type three missing type MCAR,MAR,MNAR param must list param$data must data.frame n length original data printFlag print intermediate results plots, default T","code":""},{"path":"/reference/generate.missing_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for generating — generate.missing_index","text":"list result, containing missing index","code":""},{"path":"/reference/generate.missing_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function for generating — generate.missing_index","text":"","code":"if (FALSE) generate.missing_index(type = \"MNAR\", n=length(data$y),param = list(data = data.frame(y=data$y,x=data$x), MNAR.type = \"increasing\", coeff = c(0.5,-1,0), MNAR.drawplot = c(TRUE, \"y\")))$missing_index"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/run.SSM_unanimous_cpts.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function of mainfunction SSMimpute_unanimous_cpts — run.SSM_unanimous_cpts","title":"A helper function of mainfunction SSMimpute_unanimous_cpts — run.SSM_unanimous_cpts","text":"helper function mainfunction SSMimpute_unanimous_cpts","code":""},{"path":"/reference/run.SSM_unanimous_cpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function of mainfunction SSMimpute_unanimous_cpts — run.SSM_unanimous_cpts","text":"","code":"run.SSM_unanimous_cpts(   data_ss,   formula_var,   ss_param_temp,   max_iteration = 100,   cpt_learning_param = list(cpt_method = \"mean\", burnin = 1/10, mergeband = 20,     convergence_cri = 10),   dlm_option = \"smooth\",   printFlag = T )"},{"path":"/reference/run.SSM_unanimous_cpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function of mainfunction SSMimpute_unanimous_cpts — run.SSM_unanimous_cpts","text":"data_ss contains information, selected variables formula_var enters statespace model formula_var select variables data_ss statespace model ss_param_temp list parameters set state-space model m0: initial values states C0: initial values variance states inits: initial values estimating NA terms, via maximizing likelihood AR1_coeffi: variables, whose coefficient AR(1) process; none, NULL rw_coeffi: variables, whose coefficient random walk process;none, NULL w_cp_param: variables, whose coefficients periodic fixed (may shift levels time, fixed within periods), contains list variables variable whose coefficient level shifts different values. Details variable: variable:name variable (Required); segments:many segments constant coefficient (Required); changepoints:corresponding changepoints separated segments, can either specified user automatically inferred, fixed_cpts exist changepoints exists v_cp_param: information periodic observational variance V (may decrease increase time, fixed within periods), contains list variables variable whose coefficient level shifts different values. Details variable: segments:many segments constant coefficient (Required); changepoints:corresponding changepoints separated segments, can either specified user automatically inferred, fixed_cpts exist changepoints exists max_iteration control convergence changepoints, positive integer cpt_learning_param list variable change point learning cpt_method: either \"mean\" \"meanvar\" burnin: positive number (0,1) mergeband: positive integer AR1_coeffi: variables, whose coefficient AR(1) process; none, NULL rw_coeffi: variables, whose coefficient random walk process;none, NULL w_cp_param: variables, whose coefficients periodic fixed (may shift levels time, fixed within periods) v_cp_param: information periodic observational variance V (may decrease increase time, fixed within periods) dlm_option using kalman filter smoothing printFlag print data processing","code":""},{"path":"/reference/run.SSM_unanimous_cpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function of mainfunction SSMimpute_unanimous_cpts — run.SSM_unanimous_cpts","text":"intermediate result","code":""}]
